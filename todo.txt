-- stylin'
-- handling port disconnects (e.g. bg cxns clients)
    -- evaporate content script on port disconnect??
-- test w/ initial install (no local storage, no indexedb data)
-- hammer test
-- proper way to prevent page css from affecting styles?
-- oss w/ readme/writeup
-- ask hn; is this useful? etc.
    - ucs: note taking, semantic blog extract, vocab/dictionary, pl learning, cocktails/recipes, ml training, flash cards, etc.
-- only after hn, do any extra mktg or what have you
-- MOVE ON

future
-- when pushing combined range to buffer, collapse whitespace, convert p, br *c to newlines
-- sticky buffer surviving refreshes and navigations
-- include pseudo-element content in selections?
-- download csv gets filename
-- scrollable buffer
-- capture simple styles in the selection
    - tinymce integration in table
    - http://stackoverflow.com/questions/5084713/copying-styled-text-from-a-page-to-the-clipboard-with-javascript
-- rapid visiting of urls in a list
-- capture element metadata as well
-- separately named tables, active table, etc
-- buffer splits, joins, manipulations, separate buffers, etc
-- better ux animations (e.g. buffer adds/removes animates badly)
-- multilang testing

code
-- fully replace custom externs w/ oops
-- move debugger to root level, have it query root props, dynamically render
    -- does this make it easier to only add it in unpacked modes
-- optimize ui tree w/ components for mark, over (over queries/refreshes on [client-x, client-y] or scroll forces)
    -- org om components for minimal odm diffs/updates

other
-- O/n of traversals
-- reconnect to bg page after extension refresh/update!
-- save-buffer! and other buffer ops handled via remotes
-- when to use #shadow-dom
-- lose jquery, use goog.dom,*; document.querySelector(), etc.
-- lose dexie
-- react devtools?
-- unit testing?

ideas
-- modes: simple, magic, pro
-- color inversion
-- user-defined table schemas
-- optionally convert smart quotes elipses etc?

om/next?
-- bug? if state.flag = nil, component *not* rendered but
    subsequent merge will not yield initial component render
-- how does om/next decide when/to call remotes